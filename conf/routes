# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                                                              controllers.Application.index()
GET         /identification                                                                                controllers.Identification.main()
POST        /connexion                                                                                     controllers.Identification.connexion()
GET         /deconnexion                                                                                   controllers.Identification.deconnexion()
GET         /inscription                                                                                   controllers.Inscription.main()
POST        /inscription                                                                                   controllers.Inscription.inscrire()
GET         /retrouverMotDePasse                                                                           controllers.membre.MotDePasseOublie.main()
POST        /nouveauMotDePasse                                                                             controllers.membre.MotDePasseOublie.nouveauMotDePasse()
GET         /nouveauMotDePasse/:lien                                                                       controllers.membre.MotDePasseOublie.entrerNouveauMotDePasse(lien: String)
POST        /reinitialiseMotDePasse/:membre_id/:lien                                                       controllers.membre.MotDePasseOublie.reinitialiseMotDePasse(membre_id: Integer, lien: String)
GET         /verification/:lien                                                                            functions.mail.VerifierMail.verifier(lien: String)

############
# routes pour l' UTILISATEUR
############

GET         /menuUtilisateur                                                                               controllers.membre.MenuUtilisateur.main()

#infos perso
GET         /informationsPersonnelles                                                                      controllers.membre.InformationsPersonnelles.main()
POST        /changerInformationsPersonnelles                                                               controllers.membre.InformationsPersonnelles.changerInfos()
GET         /changerInformationsPersonnelles                                                               controllers.membre.InformationsPersonnelles.redirectMain()
POST        /changerMail                                                                                   controllers.membre.InformationsPersonnelles.changerMail()
POST        /changerMdp                                                                                    controllers.membre.InformationsPersonnelles.changerMdp()

#historique
GET         /historique                                                                                    controllers.membre.Historique.main()
GET         /historiqueParObservations                                                                     controllers.membre.Historique.mainObservations()
GET         /historique/page/:page                                                                         controllers.membre.Historique.voirPage(page: Integer)
GET         /telechargerHistorique                                                                         controllers.membre.Historique.telechargerHistorique()

# Fiche de témoignage
GET         /ficheDeTemoignage                                                                             controllers.membre.GetNewEditFiche.mainNewFiche()
POST        /ficheDeTemoignage                                                                             controllers.membre.GetNewEditFiche.postNewFiche()
GET         /ficheDeTemoignage/getFiche/:fiche_id                                                          controllers.membre.GetNewEditFiche.getFiche(fiche_id: Long)
GET         /ficheDeTemoignage/editFiche/:fiche_id                                                         controllers.membre.GetNewEditFiche.mainEditFiche(fiche_id: Long, msg: String ?="")
POST        /ficheDeTemoignage/editFiche/:fiche_id                                                         controllers.membre.GetNewEditFiche.postEditFiche(fiche_id: Long)
# page d'édition d'observation TODO : obsolete. à supprimer
GET         /historique/editer/:observation_id                                                             controllers.membre.Historique.editer(observation_id: Long)
POST        /historique/editer/:observation_id                                                             controllers.membre.Historique.editerPoster(observation_id: Long)
POST        /historique/suppr/:observation_id                                                              controllers.membre.Historique.supprimer(observation_id: Long)

# Voir routes ajax en bas de doc

############
# routes pour les EXPERTS
############

GET         /menuExpert                                                                                    controllers.expert.MenuExpert.main()

# validation de témoignages
GET         /temoignagesAValider/:groupe_id                                                                controllers.expert.ValiderObservations.temoignagesNonVus(groupe_id: Integer)
GET         /temoignagesAValider/enSuspens/:groupe_id                                                      controllers.expert.ValiderObservations.temoignagesEnSuspends(groupe_id: Integer)
POST        /temoignagesAValider/vu/:groupe_id/:observation_id                                             controllers.expert.ValiderObservations.marquerVu(observation_id: Long, groupe_id: Integer)
POST        /temoignagesAValider/valide/:groupe_id/:observation_id                                         controllers.expert.ValiderObservations.valide(observation_id: Long, groupe_id: Integer)
POST        /temoignagesAValider/editer/:groupe_id/:observation_id                                         controllers.expert.ValiderObservations.editer(observation_id: Long, groupe_id: Integer)
POST        /temoignagesAValider/supprime/:groupe_id/:observation_id                                       controllers.expert.ValiderObservations.supprimer(observation_id: Long, groupe_id: Integer)
GET         /temoignagesAValider/edite/:groupe_id/:observation_id                                          controllers.expert.ValiderObservations.editeTemoignage(observation_id: Long, groupe_id: Integer)
GET         /temoignagesValides/:groupe_id/:page/:orderBy/:dir                                             controllers.expert.TemoignagesValidees.observationsValidees(groupe_id: Integer, page: Integer, orderBy: String, dir: String)
GET         /temoignagesValides/espece/:groupe_id/:espece_id/:page/:orderBy/:dir                           controllers.expert.TemoignagesValidees.observationsValideesEspece(groupe_id: Integer, page: Integer, espece_id:Integer, orderBy: String, dir: String)
GET         /temoignagesValides/membre/:groupe_id/:membre_nom/:page/:orderBy/:dir                          controllers.expert.TemoignagesValidees.observationsValideesMembre(groupe_id: Integer, page: Integer, membre_nom: String, orderBy: String, dir: String)
POST        /temoignagesValides/suspens/:groupe_id/:page/:observation_id                                   controllers.expert.TemoignagesValidees.remettreEnSuspens(groupe_id: Integer, observation_id: Long, page: Integer)
POST        /temoignagesValides/export/:groupe_id/:espece_id/:orderBy/:dir/:membre_nom                     controllers.expert.TemoignagesValidees.exportExcelTemoignagesValidees(espece_id:Integer, membre_nom: String,orderBy: String, dir: String, groupe_id: Integer)
POST        /temoignagesValides/export/:groupe_id/:espece_id/:orderBy/:dir/                                controllers.expert.TemoignagesValidees.exportExcelTemoignagesValidees(espece_id:Integer, membre_nom: String ?="",orderBy: String, dir: String, groupe_id: Integer)

# gérer stades sexes
GET         /gererstadesexe/:groupe_id                                                                     controllers.expert.GererStadeSexe.main(groupe_id: Integer)
POST        /nouveauStadeSexe/:groupe_id                                                                   controllers.expert.GererStadeSexe.ajouterStadePere(groupe_id: Integer)
POST        /nouveauStadeSexe/:groupe_id/:stade_sexe_pere_id                                               controllers.expert.GererStadeSexe.ajouterStadeFils(groupe_id: Integer, stade_sexe_pere_id: Integer)
POST        /supprimerStadeSexePere/:groupe_id/:stade_sexe_id                                              controllers.expert.GererStadeSexe.supprimerStadePere(groupe_id: Integer, stade_sexe_id: Integer)
POST        /supprimerStadeSexeFils/:groupe_id/:stade_sexe_id                                              controllers.expert.GererStadeSexe.supprimerStadeFils(groupe_id: Integer, stade_sexe_id: Integer)

# gérer dates charnières
GET         /gererdatescharnieres/:groupe_id                                                               controllers.expert.GererDatesChanieres.main(groupe_id: Integer)
POST        /ajouterDateCharniere/:groupe_id                                                               controllers.expert.GererDatesChanieres.ajouter(groupe_id: Integer)
POST        /supprimerDateCharniere/:groupe_id/:date_charniere_id                                          controllers.expert.GererDatesChanieres.supprimer(groupe_id: Integer, date_charniere_id: Integer)

# témoingiages excel
GET         /deposerTemoignages/excel                                                                      controllers.expert.DeposerTemoignagesImportExcel.main()
POST        /deposerTemoignages/excel                                                                      controllers.expert.DeposerTemoignagesImportExcel.post()
POST        /telecharger/majDeMasse/:groupe_id                                                             controllers.expert.DeposerTemoignagesImportExcel.telechargerMajDeMasse(groupe_id: Integer)
POST        /televerser/majDeMasse                                                                         controllers.expert.DeposerTemoignagesImportExcel.televerserMajDeMasse()

# gérer témoins
GET         /gererTemoinsPassifs                                                                           controllers.expert.GererTemoinsPassifs.main()
POST        /ajouterTemoinPassif                                                                           controllers.expert.GererTemoinsPassifs.ajouter()
POST        /editerTemoin/:membre_id                                                                       controllers.expert.GererTemoinsPassifs.editPost(membre_id: Integer)

# gerer les espèces d'un groupe
GET         /editerInsectes/:groupe_id                                                                     controllers.expert.EditerInsectes.main(groupe_id: Integer)
POST        /editerInsectes/changerNom/:espece_id                                                          controllers.expert.EditerInsectes.changerNom(espece_id: Integer)
POST        /editerInsectes/changerAuteur/:espece_id                                                       controllers.expert.EditerInsectes.changerAuteur(espece_id: Integer)
POST        /editerInsectes/supprimerSynonyme/:synonyme_id                                                 controllers.expert.EditerInsectes.supprimerSynonyme(synonyme_id: Integer)
POST        /editerInsectes/ajouterSynonyme/:espece_id                                                     controllers.expert.EditerInsectes.ajouterSynonyme(espece_id: Integer)
#POST        /editerInsectes/changerPhoto/:espece_id                                                        controllers.expert.EditerInsectes.changerPhoto(espece_id: Integer)
#POST        /editerInsectes/changerSousFamille/:espece_id                                                  controllers.expert.EditerInsectes.changerSousFamille(espece_id: Integer)
#POST        /editerInsectes/changerFamille/:espece_id                                                      controllers.expert.EditerInsectes.changerFamille(espece_id: Integer)

# Routes pour faire des requêtes
GET         /consulterDonnees                                                                              controllers.expert.requetes.ConsulterDonnees.main()
GET         /telechargerRapport/:filename                                                                  controllers.expert.requetes.ConsulterDonnees.telechargerFichier(filename: String)

###########
# routes pour les ADMINS
###########

GET         /menuAdmin                                                                                     controllers.admin.Admin.menuAdmin()

# assigner les experts
GET         /assignerExperts                                                                               controllers.admin.AssignerExpert.main()
POST        /assignerExpert/ajouter/:groupe_id                                                             controllers.admin.AssignerExpert.ajouter(groupe_id: Integer)
POST        /assignerExpert/retrograder/:mieog_id                                                          controllers.admin.AssignerExpert.retrograder(mieog_id: Integer)

# gérer les demandes d'inscription
GET         /demandesInscription                                                                           controllers.admin.DemandesInscription.main()
POST        /demandesInscription/valider/:membre_id                                                        controllers.admin.DemandesInscription.valideInscription(membre_id: Integer)
POST        /demandesInscription/refuser/:membre_id                                                        controllers.admin.DemandesInscription.refuserInscription(membre_id: Integer)
POST        /demandeInscription/donnerPremierAcces                                                         controllers.admin.DemandesInscription.donnerPremierAccess()

# gestion de l'organisation locale

GET         /gererOrganisationLocale                                                                       controllers.admin.GererOrganisationLocale.main()
GET         /gererOrganisationLocale/organisationLocale                                                    controllers.admin.GererOrganisationLocale.getOrganisationLocale()
GET         /gererOrganisationLocale/editGroupementLocal/:groupe_id                                        controllers.admin.GererOrganisationLocale.getEditGroupementLocal(groupe_id: Integer)
POST        /gererOrganisationLocale/editGroupementLocal/:groupe_id                                        controllers.admin.GererOrganisationLocale.postEditGroupementLocal(groupe_id: Integer)
GET         /gererOrganisationLocale/newGroupementLocal                                                    controllers.admin.GererOrganisationLocale.getNewGroupementLocal()
POST        /gererOrganisationLocale/newGroupementLocal                                                    controllers.admin.GererOrganisationLocale.postNewGroupementLocal()
POST        /gererOrganisationLocale/deleteGroupementLocal/:groupe_id                                      controllers.admin.GererOrganisationLocale.deleteGroupementLocal(groupe_id: Integer)

# gestion des especes
GET         /gererOrganisationLocale/editEspece/:espece_id                      							controllers.admin.GererEspeceAdmin.getEditEspeceLocale(espece_id: Integer)
POST        /gererOrganisationLocale/editEspece/:espece_id                                        			controllers.admin.GererEspeceAdmin.postEditEspeceLocale(espece_id: Integer)
POST        /gererOrganisationLocale/changerImage/:espece_id                                        		controllers.admin.GererEspeceAdmin.changerPhoto(espece_id: Integer)


GET         /gererOrganisationScientifique/editEspece/:espece_id                      						controllers.admin.GererEspeceAdmin.getEditEspeceScientifique(espece_id: Integer)
POST        /gererOrganisationScientifique/editEspece/:espece_id                                			controllers.admin.GererEspeceAdmin.postEditEspeceScientifique(espece_id: Integer)
POST        /gererOrganisationScientifique/changerImage/:espece_id                              			controllers.admin.GererEspeceAdmin.changerPhotoScientifique(espece_id: Integer)
GET         /gererOrganisationScientifique/newEspece                                            			controllers.admin.GererEspeceAdmin.getNewEspeceScientifique()
POST        /gererOrganisationScientifique/newEspece                                       					controllers.admin.GererEspeceAdmin.postNewEspeceScientifique()
POST        /gererOrganisationScientifique/deleteEspece/:espece_id                              			controllers.admin.GererEspeceAdmin.deleteEspeceScientifique(espece_id: Integer)


#TODO les routes suivantes sont obsolète : à éditer puis à supprimer
#GET         /gererGroupesEtSousGroupes                                                                     controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.main()
#POST        /deplacerSousGroupe/:groupe_id                                                                 controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.deplacerGroupe(groupe_id: Integer)
#POST        /creerGroupe                                                                                   controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.creerGroupe()
#POST        /creerSousGroupe                                                                               controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.creerSousGroupe()
#POST        /supprimerSousGroupe/:sous_groupe_id                                                           controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.supprimerSousGroupe(sous_groupe_id: Integer)
#POST        /supprimerGroupe/:groupe_id                                                                    controllers.admin.groupesSousGroupes.GererGroupesEtSousGroupes.supprimerGroupe(groupe_id: Integer)
#GET         /gererGroupesEtSousGroupes/sousgroupe/:sous_groupe_id                                          controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.mainAvecSousGroupeOuvert(sous_groupe_id: Integer)
#POST        /gererSousGroupes/:sous_groupe_id/ajouterEspece                                                controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterEspece(sous_groupe_id: Integer)
#POST        /gererSousGroupes/:sous_groupe_id/ajouterSousFamille                                           controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterSousFamille(sous_groupe_id: Integer)
#POST        /gererSousGroupes/:sous_groupe_id/ajouterFamille                                               controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterFamille(sous_groupe_id: Integer)
#POST        /gererSousGroupes/:sous_groupe_id/ajouterSuperFamille                                          controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterSuperFamille(sous_groupe_id: Integer)
#POST        /gererSousGroupes/:sous_groupe_id/ajouterOrdre                                                 controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.ajouterOrdre(sous_groupe_id: Integer)
#POST        /gererSousGroupes/enleverEspece/:ehsg_id                                                       controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverEspece(ehsg_id: Integer)
#POST        /gererSousGroupes/enleverSousFamille/:sofhsg_id                                                controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverSousFamille(sofhsg_id: Integer)
#POST        /gererSousGroupes/enleverFamille/:fhsg_id                                                      controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverFamille(fhsg_id: Integer)
#POST        /gererSousGroupes/enleverSuperFamille/:sufhsg_id                                               controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverSuperFamille(sufhsg_id: Integer)
#POST        /gererSousGroupes/enleverOrdre/:ohsg_id                                                        controllers.admin.groupesSousGroupes.GererElementsDansSousGroupe.enleverOrdre(ohsg_id: Integer)

GET         /listeVilles                                                                                   controllers.admin.ListeVilles.main()
GET         /listeMembres                                                                                  controllers.admin.ListeMembres.main()

# editer un membre
POST        /admin/editerTemoin/:membre_id                                                                 controllers.admin.ListeMembres.editPost(membre_id: Integer)

# gestion de l'organisation scientifique

GET         /gererOrganisationScientifique                                                                 controllers.admin.GererOrganisationScientifique.main()
GET         /gererOrganisationScientifique/organisationScientifique                                        controllers.admin.GererOrganisationScientifique.getOrganisationScientifique()
GET         /gererOrganisationScientifique/editGroupementScientifique/:gsci_id                             controllers.admin.GererOrganisationScientifique.getEditGroupementScientifique(gsci_id: Integer)
POST        /gererOrganisationScientifique/editGroupementScientifique/:gsci_id                             controllers.admin.GererOrganisationScientifique.postEditGroupementScientifique(gsci_id: Integer)
GET         /gererOrganisationScientifique/newGroupementScientifique                                       controllers.admin.GererOrganisationScientifique.getNewGroupementScientifique()
POST        /gererOrganisationScientifique/newGroupementScientifique                                       controllers.admin.GererOrganisationScientifique.postNewGroupementScientifique()
POST        /gererOrganisationScientifique/deleteGroupementScientifique/:gsci_id                           controllers.admin.GererOrganisationScientifique.deleteGroupementScientifique(gsci_id: Integer)
#TODO les routes suivantes sont obsolète : à éditer puis à supprimer
#GET         /gererBaseDeDonneesInsectes                                                                    controllers.admin.GererBaseDeDonneesInsectes.main()
#POST        /gererBaseDeDonneesInsectes/ajoutEspece                                                        controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvEspece()
#POST        /gererBaseDeDonneesInsectes/ajoutSousFam                                                       controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvSousFamille()
#POST        /gererBaseDeDonneesInsectes/ajoutFam                                                           controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvFamille()
#POST        /gererBaseDeDonneesInsectes/ajoutSuperFam                                                      controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvSuperFamille()
#POST        /gererBaseDeDonneesInsectes/ajoutOrdre                                                         controllers.admin.GererBaseDeDonneesInsectes.ajouterNouvOrdre()
#GET         /especesParSousFamille                                                                         controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSousFamille()
#GET         /especesParFamille                                                                             controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParFamille()
#GET         /especesParSuperFamille                                                                        controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSuperFamille()
#GET         /especesParOrdre                                                                               controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParOrdre()
#GET         /especesParSousGroupe                                                                          controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParSousGroupe()
#GET         /especesParGroupe                                                                              controllers.admin.GererBaseDeDonneesInsectes.listeEspecesParGroupe()
#POST        /gererBaseDeDonneesInsectes/changerSousFamille/:espece_id                                      controllers.admin.GererBaseDeDonneesInsectes.changerSousFamille(espece_id:Integer)
#POST        /gererBaseDeDonneesInsectes/changerVersFamille/:espece_id                                      controllers.admin.GererBaseDeDonneesInsectes.changerVersFamille(espece_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerFamilleEspece/:espece_id                                    controllers.admin.GererBaseDeDonneesInsectes.changerFamilleEspece(espece_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerVersSousFamille/:espece_id                                  controllers.admin.GererBaseDeDonneesInsectes.changerVersSousFamille(espece_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerPhoto/:espece_id                                            controllers.admin.GererBaseDeDonneesInsectes.changerPhoto(espece_id: Integer)
#POST        /gererBaseDeDonneesInsectes/ajouterSynonyme/:espece_id                                         controllers.admin.GererBaseDeDonneesInsectes.ajouterSynonyme(espece_id:Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerSynonyme/:synonyme_id                                     controllers.admin.GererBaseDeDonneesInsectes.supprimerSynonyme(synonyme_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerFamille/:sous_famille_id                                    controllers.admin.GererBaseDeDonneesInsectes.changerFamille(sous_famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerSuperFamille/:famille_id                                    controllers.admin.GererBaseDeDonneesInsectes.changerSuperFamille(famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerVersOrdre/:famille_id                                       controllers.admin.GererBaseDeDonneesInsectes.changerVersOrdre(famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerOrdreFamille/:famille_id                                    controllers.admin.GererBaseDeDonneesInsectes.changerOrdreFamille(famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerVersSuperFamille/:famille_id                                controllers.admin.GererBaseDeDonneesInsectes.changerVersSuperFamille(famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/changerOrdre/:super_famille_id                                     controllers.admin.GererBaseDeDonneesInsectes.changerOrdre(super_famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerEspece/:espece_id                                         controllers.admin.GererBaseDeDonneesInsectes.supprimerEspece(espece_id: Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerSousFamille/:sous_famille_id                              controllers.admin.GererBaseDeDonneesInsectes.supprimerSousFamille(sous_famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerFamille/:famille_id                                       controllers.admin.GererBaseDeDonneesInsectes.supprimerFamille(famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerSuperFamille/:super_famille_id                            controllers.admin.GererBaseDeDonneesInsectes.supprimerSuperFamille(super_famille_id: Integer)
#POST        /gererBaseDeDonneesInsectes/supprimerOrdre/:ordre_id                                           controllers.admin.GererBaseDeDonneesInsectes.supprimerOrdre(ordre_id: Integer)


##########################################
#             routes AJAX                #
##########################################
#
# TODO dans le javascript séparer des html il est plus judicieux (nécessaire?) d'utiliser un "javascript router" dans le controler application.java:
# https://www.playframework.com/documentation/2.2.x/JavaGuide6
# http://stackoverflow.com/questions/11133059/play-2-x-how-to-make-an-ajax-request-with-a-common-button
# alors le changement de ces routes est moins propice aux erreurs...


GET         /listeDesMembres/:string_id                                                                    controllers.ajax.Listes.membres(string_id: String)
GET         /listeDesCommunes/:string_id                                                                   controllers.ajax.Listes.communes(string_id: String)
GET         /emailExisteOuPas/:mail                                                                        controllers.ajax.Verifications.mailExisteOuPas(mail: String)
GET         /nomExisteOuPas/:nom                                                                           controllers.ajax.Verifications.nomExisteOuPas(nom: String)
#POST        /ajax/groupe/renommer/:groupe_id                                                               controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerGroupe(groupe_id: Integer)
#POST        /ajax/sous_groupe/renommer/:sous_groupe_id                                                     controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.renommerSousGroupe(sous_groupe_id: Integer)
#GET         /ajax/sous_groupe/editer/:sous_groupe_id                                                       controllers.ajax.admin.AjaxGererGroupeEtSousGroupes.voirPageEditerSousGroupe(sous_groupe_id: Integer)
POST        /ajax/ville/renommer/:ville_id                                                                 controllers.admin.ListeVilles.renommer(ville_id: Integer)


#Routes AJAX pour déposer un témoignage
GET         /ajax/getObservation/:observation_id                                                           controllers.ajax.membre.ajaxObservation.getObservation(observation_id: Long)
GET         /ajax/newObservation/:observation_tag                                                          controllers.ajax.membre.ajaxObservation.newObservation(observation_tag: Integer, groupe_id: Integer ?=1, espece_id: Integer ?=26)
GET         /ajax/editObservation/:observation_id                                                          controllers.ajax.membre.ajaxObservation.editObservation(observation_id: Long)
GET         /ajax/especes/dansGroupe/:groupe_id                                                            controllers.ajax.membre.ajaxObservation.getListeEspeces(groupe_id: Integer)
GET         /ajax/newinfoscomplementaires/:observation_tag/:complement_tag/:groupe_id/:stadeSexe_id        controllers.ajax.membre.ajaxObservation.newComplement(observation_tag: String, complement_tag: Integer,groupe_id: Integer, stadeSexe_id: Integer)
GET         /ajax/listeStadeSexePrecis/:groupe_id/:stade_sexe_pere_id                                      controllers.ajax.membre.ajaxObservation.getStadeSexePrecis(groupe_id: Integer, stade_sexe_pere_id: Integer)
GET         /ajax/chargephoto/:espece_id                                                                   controllers.ajax.membre.ajaxObservation.getPhoto(espece_id: Integer)


#Routes AJAX pour consulter les données

GET         /ajax/consulter/listeSousGroupes/:groupe_id                                                    controllers.ajax.expert.requetes.Requetes.listeSousGroupes(groupe_id: Integer)
GET         /ajax/consulter/listeEspeces/:groupe_id/:sous_groupe_id                                        controllers.ajax.expert.requetes.Requetes.listeEspeces(groupe_id: Integer,sous_groupe_id: Integer)
GET         /ajax/consulter/listeStades/:groupe_id                                                         controllers.ajax.expert.requetes.Requetes.listeStades(groupe_id: Integer)
GET         /ajax/consulter/infoDates/:groupe_id                                                           controllers.ajax.expert.requetes.Requetes.infoDates(groupe_id: Integer)
POST        /ajax/temoinsParPeriode                                                                        controllers.ajax.expert.requetes.Calculs.temoinsParPeriode()
POST        /ajax/histogrammeDesImagos                                                                     controllers.ajax.expert.requetes.Calculs.histogrammeDesImagos()
POST        /ajax/carteSomme                                                                               controllers.ajax.expert.requetes.Calculs.carteSomme()
POST        /ajax/carteSommeBiodiversite                                                                   controllers.ajax.expert.requetes.Calculs.carteSommeBiodiversite()
POST        /ajax/maillesParEspece                                                                         controllers.ajax.expert.requetes.Calculs.maillesParEspece()
POST        /ajax/chronologieDUnTemoin                                                                     controllers.ajax.expert.requetes.Calculs.chronologieDUnTemoin()
POST        /ajax/historiqueDesEspeces                                                                     controllers.ajax.expert.requetes.Calculs.historiqueDesEspeces()
POST        /ajax/maillesParPeriode                                                                        controllers.ajax.expert.requetes.Calculs.maillesParPeriode()
POST		/ajax/exportDonnees																			   controllers.ajax.expert.requetes.Calculs.exportDonnees()

#Routes AJAX pour EXPERTS, editer especes et témoins

GET         /editerInsectes/espece/:groupe_id/:espece_id                                                   controllers.expert.EditerInsectes.edit(groupe_id: Integer, espece_id: Integer)
GET         /editerTemoin/:membre_id                                                                       controllers.expert.GererTemoinsPassifs.editer(membre_id: Integer)


#Routes AJAX pour ADMIN, editer témoins

GET         /admin/editerTemoin/:membre_id                                                                 controllers.admin.ListeMembres.editer(membre_id: Integer)


#Routes AJAX pour gérer la Base De Données des Insectes

#POST        /ajax/gererBaseDeDonneesInsectes/renommerEspece/:espece_id                                     controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.renommerEspece(espece_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/changerAuteurEspece/:espece_id                                controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.changerAuteurEspece(espece_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/changerSystematiqueEspece/:espece_id                          controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.changerSystematiqueEspece(espece_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/changerSynonyme/:synonyme_id                                  controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.changerSynonyme(synonyme_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/changerCommentaireEspece/:espece_id                           controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.changerCommentaireEspece(espece_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/renommerSousFamille/:sous_famille_id                          controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.renommerSousFamille(sous_famille_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/renommerFamille/:famille_id                                   controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.renommerFamille(famille_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/renommerSuperFamille/:super_famille_id                        controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.renommerSuperFamille(super_famille_id: Integer)
#POST        /ajax/gererBaseDeDonneesInsectes/renommerOrdre/:ordre_id                                       controllers.ajax.admin.AjaxGererBaseDeDonneesInsectes.renommerOrdre(ordre_id: Integer)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                                                  controllers.Assets.at(path="/public", file)

# Images
GET         /image/:file_name                                                                              controllers.Application.view(file_name: String)
